#
# wm independent hotkeys
#


# run firefox
super + ctrl + Return
    firefox

# terminal emulator
super + Return
    desktopmode; \
    alacritty

# dmenu
super + @space
    ~/.local/bin/dmen.sh && notify-send $(pidof dmenu_run)

# rofi launcher
super + d
    rofi -show drun

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + shift + {q,r}
    bspc {quit,wm -r}

# kill
super + q
    bspc node -c

# close and kill
#super + {_,shift + }q
#   bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
    bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
    bspc node -{f,s} {west,south,north,east}

super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
# super + {p,b,comma,period}
#   bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

super + bracket{h,l}
    bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'


# rotate workspace
super + r
    bspc node @/ -R 90

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
    bspc node -p {west,south,north,east}

super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}


# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + Escape 
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + Escape
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
   bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + {Left,Down,Up,Right}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
   bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + alt + shift + {Left,Down,Up,Right}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + shift + ctrl + {h,j,k,l}
    bspc node -v {-20 0,0 20,0 -20,20 0}

super + shift + ctrl + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# TEST FEATURES 
#
# mark desktop
super + End 
    hid=$(bspc query -D -d);\
    hname="$(bspc query -D -d --names)";\
    file=~/.config/bspwm/dontCycle;\
    if grep -Fxq "$hid" "$file"; then sed -i /"$hid"/d "$file" && notify-send "Desktop $hname unhidden"; else echo "$hid" >> "$file" && notify-send "Desktop $hname hidden"; fi 

# cycle desktop prev
super + z
    bspc desktop prev -f && while grep -Fxq "$(bspc query -D -d)" ~/.config/bspwm/dontCycle; do bspc desktop prev -f; done

# cycle desktop next
super + x
    bspc desktop next -f && while grep -Fxq "$(bspc query -D -d)" ~/.config/bspwm/dontCycle; do bspc desktop next -f; done

# hide node
super + shift + End 
    id="$(bspc query -N -n focused)"; \
    echo $id >> /home/pree/.config/bspwm/hiddenNodes; \
    notify-send "Node $id hidden"; \
    bspc node $id -g hidden=on

# unhide nodes
super + ctrl + End
    id="$(awk 'END\{print\}' ~/.config/bspwm/hiddenNodes)"; \
    sed -i /$id/d ~/.config/bspwm/hiddenNodes; \
    notify-send "Node $id unhidden"; \
    bspc node $id -g hidden=off

# call scratchpad
super + shift + Return
    bspc rule -a Alacritty -o state=floating rectangle=750x380+1160+690 sticky=on && alacritty

# call fullscreen terminal
super + shift + + ctrl + Return
    bspc rule -a Alacritty -o state=fullscreen && alacritty

# Toggle Polybar
super + b
    polybar-msg cmd toggle; \
    sleep 0.1; \
    if [[ $(xwininfo -name "polybar-mybar_eDP" | grep "Map State") == *"IsUnMapped"* ]]; then bspc config top_padding 0; else bspc config top_padding 24; fi

# Send nodes to prev or next desktop
super + shift + {z,x}
    bspc node -d {prev,next}

# Change wallpaper
alt + r
    feh --bg-fill ~/wallpapers/favs/ --randomize

# Change theme
alt + t
    wal --t random_dark -b "#191919" 

# Move floating widows(far)
super + shift + ctrl + alt + {Left,Down,Up,Right}
    bspc node -v {-170 0,0 170,0 -170,170 0}

super + shift + ctrl + alt + {h,j,k,l}
    bspc node -v {-170 0,0 170,0 -170,170 0}

# reset gaps
super + ctrl + BackSpace
    bspc config -d focused window_gap 7 && bspc config top_padding 0 && bspc config bottom_padding 0 && bspc config left_padding 0 && bspc config right_padding 0 

# zero gaps
super + ctrl + 0
    bspc config -d focused window_gap 0 && bspc config top_padding 0 && bspc config bottom_padding 0 && bspc config left_padding 0 && bspc config right_padding 0 && allTiled

# dynamic gaps
super + ctrl + {equal,minus}
    bspc config -d focused window_gap $(($(bspc config -d focused window_gap) {+,-} 5 ))

# tdrop scratchpad
ctrl + alt + {1-9}
    tdrop -am -w 40% -h 92% -y 5% -x 30% -n {1-9} alacritty

# drawing terminals
ctrl + shift + Return
        draw_terminal

# reload xinit
super + ctrl + r
    source /home/pree/.xinitrc
